services:
  postgres:
    image: postgres:16-alpine
    container_name: confradar-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-confradar}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-confradar}
      POSTGRES_DB: ${POSTGRES_DB:-confradar}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U confradar"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: confradar-pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@confradar.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    container_name: litellm-proxy
    ports:
      - "4000:4000"
    environment:
      # Prefer the service account key if present, else fall back to OPENAI_API_KEY
      OPENAI_API_KEY: ${CONFRADAR_SA_OPENAI:-${OPENAI_API_KEY:-}}
      # Optional logging level: debug|info|warning|error
      LITELLM_LOG: info
    command: ["uvicorn", "litellm.proxy:app", "--host", "0.0.0.0", "--port", "4000"]
    restart: unless-stopped

  dagster-daemon:
    build:
      context: .
      dockerfile: Dockerfile.dagster
    container_name: dagster-daemon
    environment:
      DAGSTER_HOME: /opt/dagster/dagster_home
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://confradar:confradar@postgres:5432/confradar}
      CONFRADAR_SA_OPENAI: ${CONFRADAR_SA_OPENAI:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    volumes:
      - ./packages/confradar:/opt/dagster/app
      - dagster_data:/opt/dagster/data
      - dagster_home:/opt/dagster/dagster_home
    command: ["uv", "run", "dagster-daemon", "run"]
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      litellm:
        condition: service_started

  dagster-webserver:
    build:
      context: .
      dockerfile: Dockerfile.dagster
    container_name: dagster-webserver
    ports:
      - "3000:3000"
    environment:
      DAGSTER_HOME: /opt/dagster/dagster_home
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://confradar:confradar@postgres:5432/confradar}
      CONFRADAR_SA_OPENAI: ${CONFRADAR_SA_OPENAI:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    volumes:
      - ./packages/confradar:/opt/dagster/app
      - dagster_data:/opt/dagster/data
      - dagster_home:/opt/dagster/dagster_home
    command: ["uv", "run", "dagster-webserver", "-h", "0.0.0.0", "-p", "3000"]
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      dagster-daemon:
        condition: service_started
      litellm:
        condition: service_started

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: confradar-web
    ports:
      - "3100:3100"
    environment:
      NODE_ENV: development
      NEXT_TELEMETRY_DISABLED: "1"
      # Enable reliable file watching inside Docker on Windows/Mac
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    volumes:
      - ./web:/app
      - web_node_modules:/app/node_modules
      - web_next:/app/.next
    command: ["sh", "-lc", "if [ ! -d node_modules ] || [ -z \"$(ls -A node_modules 2>/dev/null)\" ]; then (npm ci || npm install); fi; npm run dev -- -p 3100 -H 0.0.0.0"]
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:
  dagster_data:
  dagster_home:
  web_node_modules:
  web_next:
