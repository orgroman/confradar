name: Deploy to Vercel

on:
  push:
    branches: [main]
    paths:
      - 'web/**'
      - '.github/workflows/deploy-vercel.yml'
  pull_request:
    branches: [main]
    paths:
      - 'web/**'
      - '.github/workflows/deploy-vercel.yml'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run deployment after frontend CI passes
    needs: []
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ github.event_name == 'push' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: web

      - name: Build Project Artifacts
        run: vercel build ${{ github.event_name == 'push' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: web

      - name: Deploy to Vercel (Preview)
        if: github.event_name == 'pull_request'
        id: deploy-preview
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} 2>&1 | grep -o 'https://[^ ]*')
          echo "url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "### ðŸš€ Preview Deployment" >> $GITHUB_STEP_SUMMARY
          echo "Preview URL: $DEPLOYMENT_URL" >> $GITHUB_STEP_SUMMARY
        working-directory: web

      - name: Deploy to Vercel (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} 2>&1 | grep -o 'https://[^ ]*')
          echo "### ðŸš€ Production Deployment" >> $GITHUB_STEP_SUMMARY
          echo "Production URL: $DEPLOYMENT_URL" >> $GITHUB_STEP_SUMMARY
        working-directory: web

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deploymentUrl = '${{ steps.deploy-preview.outputs.url }}';
            const comment = `## ðŸš€ Vercel Preview Deployment
            
            Your preview deployment is ready!
            
            **Preview URL:** ${deploymentUrl}
            
            Built from commit: ${context.sha.substring(0, 7)}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
